Problem 0.1. Строительство дорог

Берляндия состоит из nn городов. Изначально все города изолированы (между городами нету дорог).
По очереди будут добавляться дороги между парами городов. Необходимо после каждой добавленной дороги узнать, какое количество компонент связности из городов получилось.

- Input

Первая строка входного файла содержит два числа n и q (1≤n,q≤500000) - количество городов и запросов соответственно.
Каждая из следующих q строк состоит из двух чисел u, v - между какой парой городов будет построена дорога. Гарантируется, что между любой парой городов строится не более одной дороги и для любого запроса u != v.

- Output

На каждый запрос второго типа необходимо вывести одно число - количество компонент связности в графе из городов.



Problem 0.2. Разрушение дорог (простая версия)

В Берляндии n городов, связанных mm дорогами. Гарантируется, что изначально граф из городов связный, т.е. существует путь между любой парой вершин.
В Берляндии происходит q землетрясений, в ходе каждого из них разрушается ровно одна дорога. Необходимо после каждого землетрясения узнать, является ли полученный граф из городов связным. После очередного землетрясений дорога не перестраивается, то есть разрушается навсегда.

- Input

Первая строка входного файла содержит три числа n, m, q (1≤n,m,q≤100000) - количество городов, дорог и землетрясений в Берляндии соответственно.
Следующие m строк содержат по два натуральных числа u и v (1≤u,v≤n) - номера городов, связанных дорогой. Гарантируется, что u != v и между каждой парой городов существует не больше одной дороги.

Следующие q строк содержат по одному числу x_i
i
​	
  (1 \le x_i \le m)(1≤x 
i
​	
 ≤m) - номер дороги, которая пострадает во время ii-ого землетрясения. Гарантируется, что два различных землетрясения не разрушают одну и ту же дорогу.

- Output
Выведите строку длины qq из нулей и единиц. ii-ый символ равен 1, если после ii-ого землетрясения граф оказался связным, в противном случае выведите 0.